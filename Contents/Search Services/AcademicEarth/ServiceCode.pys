import re

BASE_URL = 'http://academicearth.org'
SEARCH_URL = 'http://academicearth.org/lectures/search/%s/page:%s'

ObjectContainer.art = R('art-default.jpg')

####################################################################################################

def Search(query):
  oc = ObjectContainer()
  SearchItems(oc, query)
  return oc

####################################################################################################

def SearchItems(oc, query, page = 1, max_items = 10):

  # Compute the URL and download the HTML
  url = SEARCH_URL % (String.Quote(query), str(page))
  search_page = HTML.ElementFromURL(url)
  search_results = search_page.xpath("//div[@id='results-container-std']//li[@class='clearfix']")

  for item in search_results:

    if len(oc) == max_items:
      return
    Log(HTML.StringFromElement(item))
    url = BASE_URL + item.xpath(".//a[@class='thumb']")[0].get('href')
    if url.startswith(BASE_URL + "/courses/") == True:
      continue

    title = item.xpath(".//h4/a/text()")[0]
    description = ''.join(item.xpath(".//p[@class='description']/text()")[0]).strip()
    thumb = BASE_URL + item.xpath(".//img[contains(@class, 'thumb')]")[0].get('src')

    oc.add(VideoClipObject(
      url = url,
      title = title,
      summary = description,
      thumb = thumb))

  SearchItems(oc, query, page + 1, max_items)